SQL> @.\06_triggers_iSpa.sql;
SQL> -- ====================================================================
SQL> -- Script : 06_triggers_iSpa.sql
SQL> -- Objet  : CrÃ©ation des triggers iSpa sur SGBD Oracle en Local (HEGLOCAL)
SQL> --
SQL> -- Mise Ã  jour des versions
SQL> -- Version  Visa	Date	  Commentaires
SQL> -- -----  ------ --------	  ------------------------------------------
SQL> -- 1.0	  CS   19.11.2019    CrÃ©ation trigers
SQL> -- ====================================================================
SQL> 
SQL> -- ====================================================
SQL> -- Trigger product
SQL> -- ====================================================
SQL> 
SQL>  CREATE SEQUENCE	sq_product  MINVALUE 1 NOMAXVALUE INCREMENT BY 1 START WITH 21 NOORDER	NOCYCLE
  2  /

Séquence créée.

SQL> 
SQL> CREATE OR REPLACE TRIGGER	tr_product
  2    before insert on PRODUCT_SPA
  3    for each row
  4  begin
  5  	 select sq_product.nextval into :NEW.PROD_ID from dual;
  6  end;
  7  
  8  /

Déclencheur créé.

SQL> ALTER TRIGGER  tr_product ENABLE
  2  /

Déclencheur modifié.

SQL> 
SQL> -- ====================================================
SQL> -- Trigger user
SQL> -- ====================================================
SQL> 
SQL>  CREATE SEQUENCE	sq_user MINVALUE 1 NOMAXVALUE INCREMENT BY 1 START WITH 21 NOORDER  NOCYCLE
  2  /

Séquence créée.

SQL> 
SQL> CREATE OR REPLACE TRIGGER	tr_user
  2    before insert on USER_SPA
  3    for each row
  4  begin
  5  	 select sq_user.nextval into :NEW.USR_ID from dual;
  6  end;
  7  
  8  /

Déclencheur créé.

SQL> ALTER TRIGGER  tr_user ENABLE
  2  /

Déclencheur modifié.

SQL> -- ====================================================
SQL> -- Trigger agenda
SQL> -- ====================================================
SQL> 
SQL>  CREATE SEQUENCE	sq_agenda  MINVALUE 1 NOMAXVALUE INCREMENT BY 1 START WITH 21 NOORDER  NOCYCLE
  2  /

Séquence créée.

SQL> 
SQL> CREATE OR REPLACE TRIGGER	tr_agenda
  2    before insert on AGENDA_SPA
  3    for each row
  4  begin
  5  	 select sq_agenda.nextval into :NEW.AGE_ID from dual;
  6  end;
  7  
  8  /

Déclencheur créé.

SQL> ALTER TRIGGER  tr_agenda ENABLE
  2  /

Déclencheur modifié.

SQL> 
SQL> -- ====================================================
SQL> -- Trigger client
SQL> -- ====================================================
SQL> 
SQL>  CREATE SEQUENCE	sq_client  MINVALUE 1 NOMAXVALUE INCREMENT BY 1 START WITH 21 NOORDER  NOCYCLE
  2  /

Séquence créée.

SQL> 
SQL> CREATE OR REPLACE TRIGGER	tr_client
  2    before insert on CLIENT_SPA
  3    for each row
  4  begin
  5  	 select sq_client.nextval into :NEW.CLI_ID from dual;
  6  end;
  7  
  8  /

Déclencheur créé.

SQL> ALTER TRIGGER  tr_client ENABLE
  2  /

Déclencheur modifié.

SQL> 
SQL> -- ====================================================
SQL> -- Trigger facture
SQL> -- ====================================================
SQL> 
SQL>  CREATE SEQUENCE	sq_facture  MINVALUE 1 NOMAXVALUE INCREMENT BY 1 START WITH 21 NOORDER	NOCYCLE
  2  /

Séquence créée.

SQL> 
SQL> CREATE OR REPLACE TRIGGER	tr_facture
  2    before insert on FACTURE_SPA
  3    for each row
  4  begin
  5  	 select sq_facture.nextval into :NEW.FACT_ID from dual;
  6  end;
  7  
  8  /

Déclencheur créé.

SQL> ALTER TRIGGER  tr_facture ENABLE
  2  /

Déclencheur modifié.

SQL> 
SQL> 
SQL> 
SQL> 
SQL> 
SQL> 
SQL> 
SQL> 
SQL> 
SQL> 
SQL> 
SQL> 
SQL> 
SQL> SPOOL OFF
